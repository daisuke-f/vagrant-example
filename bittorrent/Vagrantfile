# -*- mode: ruby -*-
# vi: set ft=ruby :
NODES = 2

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "256"
    vb.linked_clone = true
    vb.customize ["modifyvm", :id, "--groups", "/BitTorrentTest"]
  end

  config.vm.provision "shell", privileged: false, inline: <<-EOL
    touch ~/.hushlogin
  EOL

  config.vm.provision "shell", inline: <<-EOL
    apt-get update
    apt-get install --yes bittorrent
  EOL

  config.vm.define "router" do |router|
    router.vm.hostname = "router"

    (1..NODES).each do |i|
      router.vm.network "private_network", ip: "192.168.#{100 + i}.1", virtualbox__intnet: ("net%02d" % i), netmask: "24"
    end

    router.vm.provision "shell", inline: <<-EOL
      cp /vagrant/unitfiles/bttrack.service /etc/systemd/system
      cp /vagrant/unitfiles/btwebsite.service /etc/systemd/system

      systemctl enable bttrack.service
      systemctl enable btwebsite.service

      systemctl start bttrack.service
      systemctl start btwebsite.service

      if [ 0 = `sysctl --value net.ipv4.ip_forward` ]; then
        echo 'net.ipv4.ip_forward = 1' >>/etc/sysctl.conf
        sysctl -p
      fi
    EOL

    router.vm.provider "virtualbox" do |vb|
      vb.name = "router"
    end
  end

  (1..NODES).each do |i|
    nodename = "node%02d" % i

    config.vm.define nodename do |node|
      node.vm.hostname = nodename
      node.vm.network "private_network", ip: "192.168.#{100 + i}.2", virtualbox__intnet: ("net%02d" % i), netmask: "24"

      node.vm.provider "virtualbox" do |vb|
        vb.name = nodename
        
        # TODO: More elegant and robust way
        if 0 < `VBoxManage list vms | grep ^"#{nodename}"`.length then
          if 0 == `VBoxManage bandwidthctl #{nodename} list --machinereadable`.length then
            vb.customize ["bandwidthctl", :id, "add", "UploadLimit", "--type", "network", "--limit", "100k"]
            vb.customize ["modifyvm", :id, "--nicbandwidthgroup2", "UploadLimit"]
          end
        end
      end

      node.vm.provision "shell", inline: <<-END_OF_SHELL
        cat <<END_OF_NETPLAN >/etc/netplan/60-routes.yaml
---
network:
  version: 2
  ethernets:
    enp0s8:
      routes:
        - to: 192.168.0.0/16
          via: 192.168.#{100 + i}.1
END_OF_NETPLAN
        netplan apply
      END_OF_SHELL
    end
  end
end
