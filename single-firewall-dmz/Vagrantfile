# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"

  config.vm.define "firewall1" do |cfg|
    cfg.vm.provider "virtualbox" do |vb|
      vb.name = "firewall1"
      vb.customize ["modifyvm", :id, "--groups", "/single-firewall-dmz" ]
    end

    cfg.vm.network "forwarded_port", guest: 80, host: 10080

    cfg.vm.network "private_network", ip: "192.168.1.101", virtualbox__intnet: "sfd_dmz"

    cfg.vm.network "private_network", ip: "192.168.2.101", virtualbox__intnet: "sfd_internal"

    cfg.vm.provision "shell", inline: <<-SHELL
      hostnamectl set-hostname firewall1

      if [ `sysctl --value net.ipv4.ip_forward` != '1' ]; then
        echo 'net.ipv4.ip_forward = 1' >>/etc/sysctl.conf
        sysctl -p
      fi

      systemctl enable firewalld
      systemctl start firewalld

      firewall-cmd --reload

      firewall-cmd --change-interface=eth0 --zone=external
      firewall-cmd --change-interface=eth1 --zone=dmz
      firewall-cmd --change-interface=eth2 --zone=internal

      # Allow to access from external network to web1 using NAT
      firewall-cmd --zone=external --add-service=http
      firewall-cmd --zone=external --add-forward-port=port=80:proto=tcp:toport=80:toaddr=192.168.1.103
      firewall-cmd --zone=dmz --add-rich-rule='rule family=ipv4 source not address=192.168.0.0/16 masquerade'

      # Internal network can access DMZ network
      firewall-cmd --direct --add-rule ipv4 filter FORWARD 10 --source 192.168.2.0/24 --destination 192.168.0.0/16 --jump ACCEPT

      # Internal network can not access external network
      firewall-cmd --direct --add-rule ipv4 filter FORWARD 20 --source 192.168.2.0/24 --jump REJECT

      # DMZ network can not access internal network
      firewall-cmd --direct --add-rule ipv4 filter FORWARD 30 --source 192.168.1.0/24 --destination 192.168.2.0/24 --jump REJECT

      # proxy1 can access external network
      firewall-cmd --direct --add-rule ipv4 filter FORWARD 40 --source 192.168.1.102 --jump ACCEPT

      # DMZ network can not access external network
      firewall-cmd --direct --add-rule ipv4 filter FORWARD 50 --source 192.168.1.0/24 --jump REJECT

      firewall-cmd --runtime-to-permanent
    SHELL
  end

  config.vm.define "proxy1" do |cfg|
    cfg.vm.provider "virtualbox" do |vb|
      vb.name = "proxy1"
      vb.customize ["modifyvm", :id, "--groups", "/single-firewall-dmz" ]
    end

    cfg.vm.network "private_network", ip: "192.168.1.102", virtualbox__intnet: "sfd_dmz"

    cfg.vm.provision "shell", inline: <<-SHELL
      hostnamectl set-hostname proxy1

      # Install proxy server
      yum install squid -y
      systemctl enable squid
      systemctl start squid

      # Override default NAT gateway to disable direct Internet access.
      ip route del default
      ip route add default via 192.168.1.101
    SHELL
  end

  config.vm.define "web1" do |cfg|
    cfg.vm.provider "virtualbox" do |vb|
      vb.name = "web1"
      vb.customize ["modifyvm", :id, "--groups", "/single-firewall-dmz" ]
    end

    cfg.vm.network "private_network", ip: "192.168.1.103", virtualbox__intnet: "sfd_dmz"

    cfg.vm.provision "shell", inline: <<-SHELL
      hostnamectl set-hostname web1

      # Install HTTP Server
      yum install httpd -y
      systemctl enable httpd
      systemctl start httpd

      echo "<h1>web1 is working!</h1>" >/var/www/html/index.html

      # Override default NAT gateway to disable direct Internet access.
      ip route del default
      ip route add default via 192.168.1.101
    SHELL
  end

  config.vm.define "node1" do |cfg|
    cfg.vm.provider "virtualbox" do |vb|
      vb.name = "node1"
      vb.customize ["modifyvm", :id, "--groups", "/single-firewall-dmz" ]
    end

    cfg.vm.network "private_network", ip: "192.168.2.102", virtualbox__intnet: "sfd_internal"

    cfg.vm.provision "shell", inline: <<-SHELL
      hostnamectl set-hostname node1

      # Override default NAT gateway to disable direct Internet access.
      ip route del default
      ip route add default via 192.168.2.101
    SHELL
  end

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "256"
    vb.linked_clone = true
  end
end