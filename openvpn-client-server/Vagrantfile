# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure('2') do |config|
  config.vm.box = 'ubuntu/xenial64'

  config.vm.provider 'virtualbox' do |vb|
    vb.memory = '256'
  end

  config.vm.provision 'shell', name: 'suppress motd', inline: 'chmod -x /etc/update-motd.d/*'

  def provisionOpenVPN(cfg, instance_name)
    # network settings
    cfg.vm.provision 'shell', name: 'network settings', inline: <<-SHELL
      cat /vagrant/hosts.txt >>/etc/hosts

      if [ 0 = `sysctl --values net.ipv4.ip_forward` ]; then
        echo net.ipv4.ip_forward=1 >>/etc/sysctl.conf
        sysctl -p
      fi
    SHELL

    # run OpenVPN
    cfg.vm.provision 'shell', name: "run OpenVPN #{instance_name}", inline: <<-SHELL

      apt install -y openvpn

      cp /vagrant/#{instance_name}.conf \
         /vagrant/pki/demoCA/cacert.pem \
         /vagrant/pki/#{instance_name}-cert.pem \
         /vagrant/pki/#{instance_name}-key.pem /etc/openvpn

      if [ server = "#{instance_name}" ]; then
        cp /vagrant/pki/dh1024.pem /etc/openvpn
        echo a1-pass >/etc/openvpn/server-pass.txt
      else
        echo b1-pass >/etc/openvpn/client-pass.txt
      fi

      systemctl enable openvpn@#{instance_name}

      systemctl start openvpn@#{instance_name}
    SHELL
  end
 
  config.vm.define 'a1' do |cfg|
    cfg.vm.hostname = 'a1'
    cfg.vm.network 'private_network', ip: '192.168.1.101', virtualbox__intnet: 'net1'
    cfg.vm.network 'private_network', ip: '192.168.2.101', virtualbox__intnet: 'net2'

    # prepare pki assets
    cfg.vm.provision 'shell', name: 'prepare pki assets', inline: <<-SHELL
      rm -rf /vagrant/pki
      mkdir /vagrant/pki
      cd /vagrant/pki
      sh /vagrant/pki.sh 2>/dev/null
    SHELL

    provisionOpenVPN(cfg, 'server')
  end

  config.vm.define 'b1' do |cfg|
    cfg.vm.hostname = 'b1'
    cfg.vm.network 'private_network', ip: '192.168.1.102', virtualbox__intnet: 'net1'
    cfg.vm.network 'private_network', ip: '192.168.3.101', virtualbox__intnet: 'net3'

    provisionOpenVPN(cfg, 'client')
  end

  config.vm.define 'a2' do |cfg|
    cfg.vm.hostname = 'a2'
    cfg.vm.network 'private_network', ip: '192.168.2.102', virtualbox__intnet: 'net2'

    # network settings
    cfg.vm.provision 'shell', name: 'network settings', inline: <<-SHELL
      cat /vagrant/hosts.txt >>/etc/hosts
    SHELL

    cfg.vm.provision 'shell', name: 'change route table', run: 'always', inline: <<-SHELL
      route add -net 192.168.3.0 gw 192.168.2.101 netmask 255.255.255.0
    SHELL
  end

  config.vm.define 'b2' do |cfg|
    cfg.vm.hostname = 'b2'
    cfg.vm.network 'private_network', ip: '192.168.3.102', virtualbox__intnet: 'net3'

    # network settings
    cfg.vm.provision 'shell', name: 'network settings', inline: <<-SHELL
      cat /vagrant/hosts.txt >>/etc/hosts
    SHELL

    cfg.vm.provision 'shell', name: 'change route table', run: 'always', inline: <<-SHELL
      route add -net 192.168.2.0 gw 192.168.3.101 netmask 255.255.255.0
    SHELL
  end
end
